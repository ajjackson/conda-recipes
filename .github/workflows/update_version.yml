name: Update Version and Sha of conda

on: workflow_dispatch

jobs:
  update_version_and_sha:
    name: Update Version number and git sha
    runs-on: ubuntu-latest
    steps:
      - name: Clone conda recipes
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Clone mantid
        shell: bash -l {0}
        run: |
          git clone -b release-next https://github.com/mantidproject/mantid.git mantid

      - name: Install pre-req for sha256 calculation
        shell: bash -l {0}
        run: |
          sudo apt-get update
          sudo apt-get install curl openssl -y

      - name: Calculate variables and implant into recipes
        shell: bash -l {0}
        run: |
          cd mantid

          export LATEST_GIT_SHA_DATE=$(command git log -1 --format=format:%ci)
          echo $LATEST_GIT_SHA_DATE
          export YEAR=${LATEST_GIT_SHA_DATE:0:4}
          export MONTH=${LATEST_GIT_SHA_DATE:5:2}
          export DAY=${LATEST_GIT_SHA_DATE:8:2}
          export HOUR=${LATEST_GIT_SHA_DATE:11:2}
          export MINS=${LATEST_GIT_SHA_DATE:14:2}
          export PATCH_VERSION=$YEAR$MONTH$DAY.$HOUR$MINS
          echo $PATCH_VERSION

          export VERSION_MAJOR_STRING=$(command grep "set(VERSION_MAJOR" ./buildconfig/CMake/VersionNumber.cmake)
          export MAJOR_VERSION=${VERSION_MAJOR_STRING:18:1} # Only valid for 1 digit 
          echo $MAJOR_VERSION

          export VERSION_MINOR_STRING=$(command grep "set(VERSION_MINOR" ./buildconfig/CMake/VersionNumber.cmake)
          export MINOR_VERSION=${VERSION_MINOR_STRING:18:1} # Or a Minor version number?
          echo $MINOR_VERSION

          export VERSION=$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION
          echo $VERSION

          export LATEST_GIT_SHA=$(command git log -1 --format=format:%H)
          echo $LATEST_GIT_SHA

          cd ..

          export SOURCE_FILE=$LATEST_GIT_SHA.tar.gz
          curl -LO https://github.com/mantidproject/mantid/archive/$SOURCE_FILE
          export SHA_RESULT=$(command openssl sha256 $SOURCE_FILE)
          export STRING_ARRAY=($SHA_RESULT)
          export SHA256=${STRING_ARRAY[1]}
          echo $SHA256
          rm -rf $SOURCE_FILE

          cd recipes/mantid
          sed -i '/{% set git_commit =/c\{% set git_commit = "'$LATEST_GIT_SHA'" %}' ./meta.yaml
          sed -i '/{% set version =/c\{% set version = "'$VERSION'" %}' ./meta.yaml
          sed -i '/  sha256: /c\  sha256: '$SHA256'' ./meta.yaml

          cd ../mantidqt
          sed -i '/{% set git_commit =/c\{% set git_commit = "'$LATEST_GIT_SHA'" %}' ./meta.yaml
          sed -i '/{% set version =/c\{% set version = "'$VERSION'" %}' ./meta.yaml
          sed -i '/  sha256: /c\  sha256: '$SHA256'' ./meta.yaml

          cd ../mantidworkbench
          sed -i '/{% set git_commit =/c\{% set git_commit = "'$LATEST_GIT_SHA'" %}' ./meta.yaml
          sed -i '/{% set version =/c\{% set version = "'$VERSION'" %}' ./meta.yaml
          sed -i '/  sha256: /c\  sha256: '$SHA256'' ./meta.yaml

      - name: Git Commit
        uses: stefanzweifel/git-auto-commit-action@v4.9.1
        with:
          commit_message: Update Version and Git sha
          commit_options: '--no-verify --signoff'
          file_pattern: recipes/*/meta.yaml
          commit_user_name: mantid-builder
          commit_user_email: mantid-builder@hosting.com

      # If release-next was updated within the last 4 days, guess that the sha and version number should be from that branch.
